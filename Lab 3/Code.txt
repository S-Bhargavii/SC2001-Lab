#include <stdio.h>
#include <stdlib.h>

int max1(int a, int b)
{
    if (a > b)
        return a;
    else
        return b;
}

// W --> the maximum capacity
// wt[] --> list of weights
// val[] --> list of profits
// n --> number of objects
int knapsack(int W, int wt[], int val[], int n)
{
    int p[15][3];
    for (int i = 0; i <= W; i++)
    {
        for (int j = 0; j < n; j++)
        {
            if (i < wt[j])
            {
                if (j > 0)
                    p[i][j] = p[i][j - 1];
                else
                    p[i][j] = 0;
            }
            else
            {
                p[i][j] = max1(val[j] + p[i - wt[j]][j], p[i][j - 1]);
            }
        }
    }
    for (int i = 0; i <= W; i++)
    {
        for (int j = 0; j < n; j++)
        {
            printf("p[%d][%d]= %d\t", i, j, p[i][j]);
        }
        printf("\n");
    }
    return p[14][2];
}

int main()
{
    int profit[] = {5, 6, 9};
    int weight[] = {4, 6, 8};
    int W = 14;
    int n = 3;
    int ans = knapsack(W, weight, profit, n);
    printf("%d", ans);
}
